{
  "lexicon": 1,
  "id": "app.bsky.jetstream.subscribe",
  "defs": {
    "main": {
      "type": "subscription",
      "description": "Consume lightweight, friendly JSON converted from an ATProto `com.atproto.sync.subscribeRepos` stream.",
      "parameters": {
        "type": "params",
        "properties": {
          "wantedCollections": {
            "type": "array",
            "maxLength": 100,
            "items": {
              "type": "string",
              "format": "nsid"
            },
            "description": "Which records you receive on your stream (default empty = all collections)."
          },
          "wantedDids": {
            "type": "array",
            "maxLength": 10000,
            "items": {
              "type": "string",
              "format": "did"
            },
            "description": "Which records you receive on your stream (default empty = all repos)."
          },
          "maxMessageSizeBytes": {
            "type": "integer",
            "minimum": 0,
            "default": 0,
            "description": "The maximum size of a payload that this client would like to receive."
          },
          "cursor": {
            "type": "integer",
            "description": "A unix microseconds timestamp cursor to begin playback from."
          },
          "compress": {
            "type": "boolean",
            "default": false,
            "description": "Set to true to enable zstd compression."
          },
          "requireHello": {
            "type": "boolean",
            "default": false,
            "description": "Set to true to pause replay/live-tail until the server receives a SubscribeOptionsUpdate."
          }
        }
      },
      "message": {
        "schema": {
          "type": "ref",
          "ref": "#event"
        }
      }
    },
    "event": {
      "type": "object",
      "required": ["did", "time_us", "kind"],
      "nullable": ["commit", "identity", "account"],
      "properties": {
        "did": {
          "type": "string",
          "format": "did"
        },
        "time_us": {
          "type": "integer"
        },
        "kind": {
          "type": "string",
          "knownValues": ["commit", "identity", "account"]
        },
        "commit": {
          "type": "ref",
          "ref": "#commit"
        },
        "identity": {
          "type": "ref",
          "ref": "#identity"
        },
        "account": {
          "type": "ref",
          "ref": "#account"
        }
      }
    },
    "commit": {
      "type": "object",
      "required": ["rev", "operation", "collection", "rkey"],
      "nullable": ["record"],
      "properties": {
        "rev": { "type": "string" },
        "operation": {
          "type": "string",
          "knownValues": ["create", "update", "delete"]
        },
        "collection": {
          "type": "string",
          "format": "nsid"
        },
        "rkey": {
          "type": "string",
          "format": "record-key"
        },
        "record": { "type": "unknown" },
        "cid": {
          "type": "string",
          "format": "cid"
        }
      }
    },
    "identity": {
      "type": "object",
      "description": "Represents a change to an account's identity. Could be an updated handle, signing key, or pds hosting endpoint. Serves as a prod to all downstream services to refresh their identity cache.",
      "required": ["seq", "did", "time"],
      "properties": {
        "seq": { "type": "integer" },
        "did": { "type": "string", "format": "did" },
        "time": { "type": "string", "format": "datetime" },
        "handle": {
          "type": "string",
          "format": "handle",
          "description": "The current handle for the account, or 'handle.invalid' if validation fails. This field is optional, might have been validated or passed-through from an upstream source. Semantics and behaviors for PDS vs Relay may evolve in the future; see atproto specs for more details."
        }
      }
    },
    "account": {
      "type": "object",
      "description": "Represents a change to an account's status on a host (eg, PDS or Relay). The semantics of this event are that the status is at the host which emitted the event, not necessarily that at the currently active PDS. Eg, a Relay takedown would emit a takedown with active=false, even if the PDS is still active.",
      "required": ["seq", "did", "time", "active"],
      "properties": {
        "seq": { "type": "integer" },
        "did": { "type": "string", "format": "did" },
        "time": { "type": "string", "format": "datetime" },
        "active": {
          "type": "boolean",
          "description": "Indicates that the account has a repository which can be fetched from the host that emitted this event."
        },
        "status": {
          "type": "string",
          "description": "If active=false, this optional field indicates a reason for why the account is not active.",
          "knownValues": ["takendown", "suspended", "deleted", "deactivated"]
        }
      }
    },
    "sourcedMessage": {
      "type": "object",
      "description": "Send messages back to Jetstream over the websocket.",
      "required": ["type", "payload"],
      "properties": {
        "type": { "type": "string" },
        "payload": { "type": "unknown" }
      }
    },
    "optionsUpdate": {
      "type": "object",
      "description": "Update subscription filter after connecting to the socket.",
      "properties": {
        "wantedCollections": {
          "type": "array",
          "maxLength": 100,
          "items": {
            "type": "string",
            "format": "nsid"
          },
          "description": "Which records you receive on your stream (default empty = all collections)."
        },
        "wantedDids": {
          "type": "array",
          "maxLength": 10000,
          "items": {
            "type": "string",
            "format": "did"
          },
          "description": "Which records you receive on your stream (default empty = all repos)."
        },
        "maxMessageSizeBytes": {
          "type": "integer",
          "minimum": 0,
          "default": 0,
          "description": "The maximum size of a payload that this client would like to receive."
        }
      }
    }
  }
}
